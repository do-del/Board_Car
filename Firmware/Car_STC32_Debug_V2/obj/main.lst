C251 COMPILER V5.60.0,  main                                                               20/06/23  09:54:22  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE main
OBJECT MODULE PLACED IN .\obj\main.obj
COMPILER INVOKED BY: C:\Keil_c251\C251\BIN\C251.EXE src\main.c XSMALL INTR2 BROWSE INCDIR(.\Del;.\src) DEBUG PRINT(.\obj
                    -\main.lst) TABS(2) OBJECT(.\obj\main.obj) 

stmt  level    source

    1          /*---------------------------------------------------------------------*/
    2          /* --- STC MCU Limited ------------------------------------------------*/
    3          /* --- STC 1T Series MCU Demo Programme -------------------------------*/
    4          /* --- Mobile: (86)13922805190 ----------------------------------------*/
    5          /* --- Fax: 86-0513-55012956,55012947,55012969 ------------------------*/
    6          /* --- Tel: 86-0513-55012928,55012929,55012966 ------------------------*/
    7          /* --- Web: www.STCMCU.com --------------------------------------------*/
    8          /* --- Web: www.STCMCUDATA.com  ---------------------------------------*/
    9          /* --- QQ:  800003751 -------------------------------------------------*/
   10          /* Èç¹ûÒªÔÚ³ÌĞòÖĞÊ¹ÓÃ´Ë´úÂë,ÇëÔÚ³ÌĞòÖĞ×¢Ã÷Ê¹ÓÃÁËSTCµÄ×ÊÁÏ¼°³ÌĞò        */
   11          /*---------------------------------------------------------------------*/
   12          
   13          /*************  ¹¦ÄÜËµÃ÷    **************
   14          
   15          ±¾Àı³Ì»ùÓÚSTC32GºËĞÄ×ª½Ó°å£¨ÍÀÁúµ¶£©½øĞĞ±àĞ´²âÊÔ¡£
   16          
   17          Ê¹ÓÃUSBÏßÁ¬½ÓºËĞÄ°åUSB½Ó¿ÚÓëµçÄÔ;
   18          
   19          MCUÍ¨¹ıUSB CDC(Communication Device Class)Ğ­ÒéÊ¶±ğÎª´®¿ÚÉè±¸;
   20          
   21          Ê¹ÓÃ´®¿ÚÖúÊÖ´ò¿ªCDCĞéÄâ´®¿Ú£¬È»ºóÏòMCU·¢ËÍÊı¾İ£¬MCU·µ»Ø½ÓÊÕµ½µÄÊı¾İµ½´®¿ÚÖúÊÖ;
   22          
   23          Êı¾İ³¤¶ÈÏŞÖÆÔÚ63×Ö½ÚÒÔÄÚ¡£
   24          
   25          ´ËÍâ³ÌĞòÑİÊ¾Á½ÖÖ¸´Î»½øÈëUSBÏÂÔØÄ£Ê½µÄ·½·¨£º
   26          1. Í¨¹ıÃ¿1ºÁÃëÖ´ĞĞÒ»´Î¡°KeyResetScan¡±º¯Êı£¬ÊµÏÖ³¤°´P3.2¿Ú°´¼ü´¥·¢MCU¸´Î»£¬½øÈëUSBÏÂÔØÄ£Ê½¡£
   27             (Èç¹û²»Ï£Íû¸´Î»½øÈëUSBÏÂÔØÄ£Ê½µÄ»°£¬¿ÉÔÚ¸´Î»´úÂëÀï½« IAP_CONTR µÄbit6Çå0£¬Ñ¡Ôñ¸´Î»½øÓÃ»§³ÌĞòÇø)
   28          2. Í¨¹ı¼ÓÔØ¡°stc_usb_cdc_32g.lib¡±¿âº¯Êı£¬ÊµÏÖÊ¹ÓÃSTC-ISPÈí¼ş·¢ËÍÖ¸Áî´¥·¢MCU¸´Î»£¬½øÈëUSBÏÂÔØÄ£Ê½²¢×Ô¶¯ÏÂ
             -ÔØ¡£
   29             (×¢Òâ£ºÊ¹ÓÃCDC½Ó¿Ú´¥·¢MCU¸´Î»²¢×Ô¶¯ÏÂÔØ¹¦ÄÜ£¬ĞèÒª¹´Ñ¡¶Ë¿ÚÉèÖÃ£ºÏÂ´ÎÇ¿ÖÆÊ¹ÓÃ¡±STC USB Writer (HID)¡±½øĞ
             -ĞISPÏÂÔØ)
   30          
   31          ÏÂÔØÊ±, Ñ¡ÔñÊ±ÖÓ 24MHZ (ÓÃ»§¿É×ÔĞĞĞŞ¸ÄÆµÂÊ)¡£
   32          
   33          ******************************************/
   34          
   35          #include "stc.h"
   36          #include "usb.h"
   37          #include "debug.h"
   38          #include "led.h"
   39          #include "i2c.h"
   40          #include "mpu6050.h"
   41          #include "pwm.h"
   42          #include "rf24.h"
   43          #include "timer.h"
   44          
   45          #define MAIN_Fosc       24000000L   //¶¨ÒåÖ÷Ê±ÖÓ
   46          
   47          char *USER_DEVICEDESC = NULL;
   48          char *USER_PRODUCTDESC = NULL;
   49          char *USER_STCISPCMD = "@STCISP#";                      //ÉèÖÃ×Ô¶¯¸´Î»µ½ISPÇøµÄÓÃ»§½Ó¿ÚÃüÁî
   50          
   51          //P3.2¿Ú°´¼ü¸´Î»ËùĞè±äÁ¿
   52          bit Key_Flag;
   53          u16 Key_cnt;
   54          
   55          bit rx_flag = 1;
   56          bit txc_flag = 0;
C251 COMPILER V5.60.0,  main                                                               20/06/23  09:54:22  PAGE 2   

   57          unsigned char rx[11] = {0};
   58          unsigned char tx[11] = {'O','K',0};
   59          
   60          mpu6050_struct mpu_dat;
   61          
   62          void sys_init();
   63          void delay_ms(u8 ms);
   64          void KeyResetScan(void);
   65          
   66          void I2C_Scan(void)
   67          {
   68   1      #if DEBUG_ENABLE
   69   1        unsigned char addr_test;
   70   1        unsigned char flag = 0;
   71   1        
   72   1        printf("i2c scan start...\r\n");
   73   1        
   74   1        for(addr_test = 0; addr_test < 200; addr_test++)
   75   1        {
   76   2          I2C_Start();
   77   2          if(!I2C_SendByte(addr_test<<1)) flag = 1;
   78   2          I2C_Stop();
   79   2          if(flag)
   80   2          {
   81   3            flag = 0;
   82   3            printf("Find addr: %X\r\n", addr_test);
   83   3          }
   84   2        }
   85   1        
   86   1        printf("i2c scan done\r\n");
   87   1        
   88   1      #endif
   89   1      }
   90          
   91          void update_1ms(void)
   92          {
   93   1        if(txc_flag)
   94   1        {
   95   2          RF24_RX_Mode();
   96   2          txc_flag = 0;
   97   2        }
   98   1        if(rx_flag)
   99   1        {
  100   2          if(RF24_IRQ == 0)
  101   2          {
  102   3            RF24_Read_Buf(RD_RX_PLOAD,rx,11);     //¶ÁÈ¡Êı¾İ
  103   3            CE_LOW();
  104   3            RF24_Write_Reg(WRITE_REG+STATUS,0x40);
  105   3            CE_HIGH();
  106   3            
  107   3            //printf("rx:%c\r\n", rx[0]);
  108   3            //if(rx[0] == 'D')
  109   3            //{
  110   3              /*
  111   3              PWM_Set_Duty(CH_0,(uint16_t)(rx[1]<<3)+500);
  112   3              PWM_Set_Duty(CH_1,(uint16_t)(rx[2]<<3)+500);
  113   3              PWM_Set_Duty(CH_2,(uint16_t)(rx[3]<<3)+500);
  114   3              PWM_Set_Duty(CH_3,(uint16_t)(rx[4]<<3)+500);
  115   3              CH9 = rx[5];
  116   3              CH10 = rx[6];
  117   3              */
  118   3            //}
  119   3            rx_flag = 0;
  120   3            RF24_TX_Mode();
  121   3          }
  122   2        }
C251 COMPILER V5.60.0,  main                                                               20/06/23  09:54:22  PAGE 3   

  123   1        else
  124   1        {
  125   2          CE_LOW();
  126   2          RF24_Write_Buf(WR_TX_PLOAD, tx, 11);
  127   2          CE_HIGH();
  128   2          //delay_ms(1);
  129   2          rx_flag = 1;
  130   2          txc_flag = 1;
  131   2          //RF24_RX_Mode();
  132   2        }
  133   1      }
  134          
  135          void main()
  136          {
  137   1        sys_init();  //ÏµÍ³³õÊ¼»¯
  138   1        usb_init();  //USB CDC ½Ó¿ÚÅäÖÃ
  139   1        EA = 1;
  140   1        
  141   1        P53 = 0;
  142   1        while(DeviceState != DEVSTATE_CONFIGURED); //µÈ´ıUSBÍê³ÉÅäÖÃ
  143   1        //P3PU |= 0x08;
  144   1        delay_ms(200);
  145   1        delay_ms(200);
  146   1        delay_ms(200);
  147   1        delay_ms(200);
  148   1        delay_ms(200);
  149   1        printf("---------STC32 Debug----------\r\n");
  150   1        //I2C_Scan();
  151   1        //mpu6050_init();
  152   1        
  153   1        //PWM³õÊ¼»¯
  154   1        pwm_init();
  155   1        pwma_setcycle(1000);
  156   1        pwm1_setduty(300);
  157   1        pwm4_setduty(300);
  158   1        pwm1p_enable();
  159   1        pwm4p_enable();
  160   1        pwm1n_enable();
  161   1        pwm4n_enable();
  162   1        
  163   1        P53 = 1;
  164   1        
  165   1        while (1)
  166   1        {
  167   2          delay_ms(1);
  168   2          KeyResetScan();   //³¤°´P3.2¿Ú°´¼ü´¥·¢Èí¼ş¸´Î»£¬½øÈëUSBÏÂÔØÄ£Ê½£¬²»ĞèÒª´Ë¹¦ÄÜ¿ÉÉ¾³ı±¾ĞĞ´úÂë
  169   2          
  170   2          if(DeviceState != DEVSTATE_CONFIGURED)  //µÈ´ıUSBÍê³ÉÅäÖÃ
  171   2            continue;
  172   2      
  173   2          if (bUsbOutReady)
  174   2          {
  175   3            usb_OUT_done();    //½ÓÊÕÓ¦´ğ£¨¹Ì¶¨¸ñÊ½£©
  176   3            
  177   3            printf("OutNumber=0x%X\r\n",OutNumber);  //Ê¹ÓÃ printf º¯Êı´òÓ¡½ÓÊÕÊı¾İ³¤¶È
  178   3      
  179   3            memcpy(UsbInBuffer, UsbOutBuffer, OutNumber);  //½«½ÓÊÕÊı¾İ(UsbOutBuffer)£¬¸´ÖÆµ½·¢ËÍ»º³åÇø(UsbInBuffe
             -r)
  180   3            usb_IN(OutNumber);      //Ô­Â··µ»Ø, ÓÃÓÚ²âÊÔ
  181   3          }
  182   2        }
  183   1      }
  184          
  185          void sys_init()
  186          {
  187   1        WTST = 0;  //ÉèÖÃ³ÌĞòÖ¸ÁîÑÓÊ±²ÎÊı£¬¸³ÖµÎª0¿É½«CPUÖ´ĞĞÖ¸ÁîµÄËÙ¶ÈÉèÖÃÎª×î¿ì
C251 COMPILER V5.60.0,  main                                                               20/06/23  09:54:22  PAGE 4   

  188   1        EAXFR = 1; //À©Õ¹¼Ä´æÆ÷(XFR)·ÃÎÊÊ¹ÄÜ
  189   1        CKCON = 0; //Ìá¸ß·ÃÎÊXRAMËÙ¶È
  190   1      
  191   1        P0M1 = 0x00;   P0M0 = 0x00;   //ÉèÖÃÎª×¼Ë«Ïò¿Ú
  192   1        P1M1 = 0x00;   P1M0 = 0x00;   //ÉèÖÃÎª×¼Ë«Ïò¿Ú
  193   1        P2M1 = 0x00;   P2M0 = 0x00;   //ÉèÖÃÎª×¼Ë«Ïò¿Ú
  194   1        P3M1 = 0x00;   P3M0 = 0x00;   //ÉèÖÃÎª×¼Ë«Ïò¿Ú
  195   1        P4M1 = 0x00;   P4M0 = 0x00;   //ÉèÖÃÎª×¼Ë«Ïò¿Ú
  196   1        P5M1 = 0x00;   P5M0 = 0x00;   //ÉèÖÃÎª×¼Ë«Ïò¿Ú
  197   1        P6M1 = 0x00;   P6M0 = 0x00;   //ÉèÖÃÎª×¼Ë«Ïò¿Ú
  198   1        P7M1 = 0x00;   P7M0 = 0x00;   //ÉèÖÃÎª×¼Ë«Ïò¿Ú
  199   1        
  200   1        Debug_Init(); //µ÷ÊÔ¿Ú³õÊ¼»¯
  201   1        
  202   1        I2C_Init(); //I2C³õÊ¼»¯
  203   1        
  204   1        //RF24³õÊ¼»¯²¢½øÈëRXÄ£Ê½
  205   1        RF24_Init();
  206   1        RF24_Write_Reg(WRITE_REG + EN_AA,0x01); //¹ÜµÀ0×Ô¶¯È·ÈÏ
  207   1        RF24_Write_Reg(WRITE_REG+EN_RXADDR,0x01); //Ê¹ÄÜ¹ÜµÀ0
  208   1        RF24_Write_Reg(WRITE_REG+SETUP_RETR,0x0a);  //¹Ø±Õ×Ô¶¯ÖØ·¢
  209   1        RF24_RX_Mode();
  210   1        RF24_Set_Channel(66); //Ñ¡ÔñÉäÆµÍ¨µÀ66
  211   1        RF24_Set_Power(RF_PWR_0); //Ñ¡Ôñ·¢Éä¹¦ÂÊ
  212   1        RF24_Set_P0_Size(11); //Ñ¡ÔñÊı¾İ³¤¶È
  213   1        RF24_Set_Rate(RATE_1M_BPS); //ÉèÖÃ²¨ÌØÂÊ
  214   1        RF24_Write_Buf(WRITE_REG + TX_ADDR, TX_ADDRESS, TX_ADR_WIDTH);     // Ğ´Èë·¢ËÍµØÖ·
  215   1        RF24_Write_Buf(WRITE_REG + RX_ADDR_P0, TX_ADDRESS, TX_ADR_WIDTH);  // ÎªÁËÓ¦´ğ½ÓÊÕÉè±¸£¬½ÓÊÕÍ¨µÀ0µØÖ·ºÍ·
             -¢ËÍµØÖ·ÏàÍ¬
  216   1        rx_flag = 1;
  217   1        txc_flag = 0;
  218   1        
  219   1        P2IM0 = 0x00;
  220   1        P2IM1 = 0x00;
  221   1        P2INTE |= 0x01<<2;
  222   1        
  223   1        //timer0_init(1000, update_1ms);
  224   1      }
  225          
  226          void common_isr() interrupt 13
  227          {
  228   1        if(P2INTF & 0x04)
  229   1        {
  230   2          unsigned char rf24_status = 0;
  231   2          P2INTF = 0x00;
  232   2          
  233   2          CE_LOW();
  234   2          rf24_status = RF24_Read_Reg(READ_REG+STATUS);
  235   2          
  236   2          //½ÓÊÕÖĞ¶Ï
  237   2          if(rf24_status & RX_DR)
  238   2          {
  239   3            RF24_Read_Buf(RD_RX_PLOAD,rx,11);     //¶ÁÈ¡Êı¾İ
  240   3            RF24_Write_Reg(WRITE_REG+STATUS, RX_DR);
  241   3            RF24_Write_Reg(FLUSH_RX, 0xff);
  242   3            printf("rx:%c\r\n", rx[0]);
  243   3            RF24_TX_Mode();
  244   3            CE_LOW();
  245   3            RF24_Write_Buf(WR_TX_PLOAD, tx, 11);
  246   3            CE_HIGH();
  247   3          }
  248   2          
  249   2          if(rf24_status & TX_DS)
  250   2          {
  251   3            RF24_Write_Reg(WRITE_REG+STATUS, TX_DS);
  252   3            RF24_Write_Reg(FLUSH_TX, 0xff);
C251 COMPILER V5.60.0,  main                                                               20/06/23  09:54:22  PAGE 5   

  253   3            RF24_RX_Mode();
  254   3          }
  255   2          
  256   2          if(rf24_status & MAX_RT)
  257   2          {
  258   3            RF24_Write_Reg(WRITE_REG+STATUS, MAX_RT);
  259   3            RF24_Write_Reg(FLUSH_TX, 0xff);
  260   3            RF24_RX_Mode();
  261   3          }
  262   2        }
  263   1      }
  264          
  265          //========================================================================
  266          // º¯Êı: void delay_ms(u8 ms)
  267          // ÃèÊö: ÑÓÊ±º¯Êı¡£
  268          // ²ÎÊı: ms,ÒªÑÓÊ±µÄmsÊı, ÕâÀïÖ»Ö§³Ö1~255ms. ×Ô¶¯ÊÊÓ¦Ö÷Ê±ÖÓ.
  269          // ·µ»Ø: none.
  270          // °æ±¾: VER1.0
  271          // ÈÕÆÚ: 2021-3-9
  272          // ±¸×¢: 
  273          //========================================================================
  274          void delay_ms(u8 ms)
  275          {
  276   1           u16 i;
  277   1           do{
  278   2                i = MAIN_Fosc / 6000;
  279   2                while(--i);   //6T per loop
  280   2           }while(--ms);
  281   1      }
  282          
  283          //========================================================================
  284          // º¯Êı: void KeyResetScan(void)
  285          // ÃèÊö: P3.2¿Ú°´¼ü³¤°´1Ãë´¥·¢Èí¼ş¸´Î»£¬½øÈëUSBÏÂÔØÄ£Ê½¡£
  286          // ²ÎÊı: none.
  287          // ·µ»Ø: none.
  288          // °æ±¾: VER1.0
  289          // ÈÕÆÚ: 2022-6-11
  290          // ±¸×¢: 
  291          //========================================================================
  292          void KeyResetScan(void)
  293          {
  294   1          if(!P32)
  295   1          {
  296   2              if(!Key_Flag)
  297   2              {
  298   3                  Key_cnt++;
  299   3                  if(Key_cnt >= 1000)   //Á¬Ğø1000msÓĞĞ§°´¼ü¼ì²â
  300   3                  {
  301   4                      Key_Flag = 1;   //ÉèÖÃ°´¼ü×´Ì¬£¬·ÀÖ¹ÖØ¸´´¥·¢
  302   4      
  303   4                      USBCON = 0x00;      //Çå³ıUSBÉèÖÃ
  304   4                      USBCLK = 0x00;
  305   4                      IRC48MCR = 0x00;
  306   4                      
  307   4                      delay_ms(10);
  308   4                      IAP_CONTR = 0x60;   //´¥·¢Èí¼ş¸´Î»£¬´ÓISP¿ªÊ¼Ö´ĞĞ
  309   4                      while (1);
  310   4                  }
  311   3              }
  312   2          }
  313   1          else
  314   1          {
  315   2              Key_cnt = 0;
  316   2              Key_Flag = 0;
  317   2          }
  318   1      }
C251 COMPILER V5.60.0,  main                                                               20/06/23  09:54:22  PAGE 6   



Module Information          Static   Overlayable
------------------------------------------------
  code size            =       777     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =        50     ------
  bit size             =         3     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =       173     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
