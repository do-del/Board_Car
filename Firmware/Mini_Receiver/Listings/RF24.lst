C51 COMPILER V9.60.0.0   RF24                                                              02/12/2023 12:53:38 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE RF24
OBJECT MODULE PLACED IN .\Objects\RF24.obj
COMPILER INVOKED BY: D:\Keil51\C51\BIN\C51.EXE RF24.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\RF24.
                    -lst) TABS(2) OBJECT(.\Objects\RF24.obj)

line level    source

   1          #include "RF24.h"
*** WARNING C317 IN LINE 27 OF RF24.h: attempt to redefine macro 'NOP'
   2          
   3          unsigned char TX_ADDRESS[TX_ADR_WIDTH] = {0x0A,0x01,0x07,0x0E,0x01};  // ∂®“Â“ª∏ˆæ≤Ã¨∑¢ÀÕµÿ÷∑
   4          
   5          static unsigned char SPI_RW(unsigned char byte)
   6          {
   7   1        unsigned char bit_ctr;
   8   1        for(bit_ctr=0; bit_ctr<8; bit_ctr++)
   9   1        {
  10   2          if(byte & 0x80)
  11   2            MOSI = 1;
  12   2          else
  13   2            MOSI = 0;                                
  14   2          byte = (byte << 1);                      
  15   2          SCK = 1;                                   
  16   2          byte |= MISO;                             
  17   2          SCK = 0;                                
  18   2        }
  19   1        return(byte);                              
  20   1      }
  21          
  22          /********************************************************
  23          ∫Ø ˝π¶ƒ‹£∫RF24“˝Ω≈≥ı ºªØ                
  24          »Îø⁄≤Œ ˝£∫Œﬁ
  25          ∑µªÿ  ÷µ£∫Œﬁ
  26          *********************************************************/
  27          void RF24_Init(void)
  28          {
  29   1        SCK = 0;                          //SPI ±÷”œﬂ¿≠µÕ
  30   1        CSN = 1;
  31   1        CE  = 0;
  32   1        IRQ = 1;
  33   1      }
  34          
  35          
  36          /********************************************************
  37          ∫Ø ˝π¶ƒ‹£∫–¥ºƒ¥Ê∆˜µƒ÷µ£®µ•◊÷Ω⁄£©                
  38          »Îø⁄≤Œ ˝£∫reg:ºƒ¥Ê∆˜”≥…‰µÿ÷∑£®∏Ò Ω£∫WRITE_REG£¸reg£©
  39                    value:ºƒ¥Ê∆˜µƒ÷µ
  40          ∑µªÿ  ÷µ£∫◊¥Ã¨ºƒ¥Ê∆˜µƒ÷µ
  41          *********************************************************/
  42          unsigned char RF24_Write_Reg(unsigned char reg, unsigned char value)
  43          {
  44   1        unsigned char status;
  45   1      
  46   1        CSN = 0;                 
  47   1        status = SPI_RW(reg);       
  48   1        SPI_RW(value);
  49   1        CSN = 1;  
  50   1        
  51   1        return(status);
  52   1      }
  53          
C51 COMPILER V9.60.0.0   RF24                                                              02/12/2023 12:53:38 PAGE 2   

  54          
  55          /********************************************************
  56          ∫Ø ˝π¶ƒ‹£∫–¥ºƒ¥Ê∆˜µƒ÷µ£®∂‡◊÷Ω⁄£©                  
  57          »Îø⁄≤Œ ˝£∫reg:ºƒ¥Ê∆˜”≥…‰µÿ÷∑£®∏Ò Ω£∫WRITE_REG£¸reg£©
  58                    pBuf:–¥ ˝æ› ◊µÿ÷∑
  59                    bytes:–¥ ˝æ›◊÷Ω⁄ ˝
  60          ∑µªÿ  ÷µ£∫◊¥Ã¨ºƒ¥Ê∆˜µƒ÷µ
  61          *********************************************************/
  62          unsigned char RF24_Write_Buf(unsigned char reg, const unsigned char *pBuf, unsigned char bytes)
  63          {
  64   1        unsigned char status,byte_ctr;
  65   1      
  66   1        CSN = 0;                                        
  67   1        status = SPI_RW(reg);                          
  68   1        for(byte_ctr=0; byte_ctr<bytes; byte_ctr++)     
  69   1          SPI_RW(*pBuf++);
  70   1        CSN = 1;                                        
  71   1      
  72   1        return(status);       
  73   1      }                            
  74          
  75          
  76          /********************************************************
  77          ∫Ø ˝π¶ƒ‹£∫∂¡»°ºƒ¥Ê∆˜µƒ÷µ£®µ•◊÷Ω⁄£©                  
  78          »Îø⁄≤Œ ˝£∫reg:ºƒ¥Ê∆˜”≥…‰µÿ÷∑£®∏Ò Ω£∫READ_REG£¸reg£©
  79          ∑µªÿ  ÷µ£∫ºƒ¥Ê∆˜÷µ
  80          *********************************************************/
  81          unsigned char RF24_Read_Reg(unsigned char reg)
  82          {
  83   1        unsigned char value;
  84   1      
  85   1        CSN = 0;    
  86   1        SPI_RW(reg);      
  87   1        value = SPI_RW(0);
  88   1        CSN = 1;              
  89   1      
  90   1        return(value);
  91   1      }
  92          
  93          
  94          /********************************************************
  95          ∫Ø ˝π¶ƒ‹£∫∂¡»°ºƒ¥Ê∆˜µƒ÷µ£®∂‡◊÷Ω⁄£©                  
  96          »Îø⁄≤Œ ˝£∫reg:ºƒ¥Ê∆˜”≥…‰µÿ÷∑£®READ_REG£¸reg£©
  97                    pBuf:Ω” ’ª∫≥Â«¯µƒ ◊µÿ÷∑
  98                    bytes:∂¡»°◊÷Ω⁄ ˝
  99          ∑µªÿ  ÷µ£∫◊¥Ã¨ºƒ¥Ê∆˜µƒ÷µ
 100          *********************************************************/
 101          unsigned char RF24_Read_Buf(unsigned char reg, unsigned char *pBuf, unsigned char bytes)
 102          {
 103   1        unsigned char status,byte_ctr;
 104   1      
 105   1        CSN = 0;                                        
 106   1        status = SPI_RW(reg);                           
 107   1        for(byte_ctr=0;byte_ctr<bytes;byte_ctr++)
 108   1          pBuf[byte_ctr] = SPI_RW(0);                   //∂¡»° ˝æ›£¨µÕ◊÷Ω⁄‘⁄«∞
 109   1        CSN = 1;                                        
 110   1      
 111   1        return(status);    
 112   1      }
 113          
 114          
 115          /********************************************************
C51 COMPILER V9.60.0.0   RF24                                                              02/12/2023 12:53:38 PAGE 3   

 116          ∫Ø ˝π¶ƒ‹£∫RF24Ω” ’ƒ£ Ω≥ı ºªØ                      
 117          »Îø⁄≤Œ ˝£∫Œﬁ
 118          ∑µªÿ  ÷µ£∫Œﬁ
 119          *********************************************************/
 120          void RF24_RX_Mode(void)
 121          {
 122   1        CE = 0;
 123   1        //RF24_Write_Buf(WRITE_REG + RX_ADDR_P0, TX_ADDRESS, TX_ADR_WIDTH); // Ω” ’…Ë±∏Ω” ’Õ®µ¿0 π”√∫Õ∑¢ÀÕ…Ë±∏œ‡Õ
             -¨µƒ∑¢ÀÕµÿ÷∑
 124   1        //RF24_Write_Reg(WRITE_REG + EN_AA, 0x01);                          //  πƒ‹Ω” ’Õ®µ¿0◊‘∂Ø”¶¥
 125   1        //RF24_Write_Reg(WRITE_REG + EN_RXADDR, 0x01);                      //  πƒ‹Ω” ’Õ®µ¿0
 126   1        //RF24_Write_Reg(WRITE_REG + RF_CH, 40);                            // —°‘Ò…‰∆µÕ®µ¿0x40
 127   1        //RF24_Write_Reg(WRITE_REG + RX_PW_P0, TX_PLOAD_WIDTH);             // Ω” ’Õ®µ¿0—°‘Ò∫Õ∑¢ÀÕÕ®µ¿œ‡Õ¨”––ß ˝æ›øÌ∂»
 128   1        //RF24_Write_Reg(WRITE_REG + RF_SETUP, 0x0f);                       //  ˝æ›¥´ ‰¬ 2Mbps£¨∑¢…‰π¶¬ 7dBm
 129   1        RF24_Write_Reg(WRITE_REG + CONFIG, 0x0f);                         // CRC πƒ‹£¨16ŒªCRC–£—È£¨…œµÁ£¨Ω” ’ƒ£ Ω
 130   1        RF24_Write_Reg(WRITE_REG + STATUS, 0xff);                         //«Â≥˝À˘”–µƒ÷–∂œ±Í÷æŒª
 131   1        CE = 1;                                                             // ¿≠∏ﬂCE∆Ù∂ØΩ” ’…Ë±∏
 132   1      }           
 133          
 134          
 135          /********************************************************
 136          ∫Ø ˝π¶ƒ‹£∫RF24∑¢ÀÕƒ£ Ω≥ı ºªØ                      
 137          »Îø⁄≤Œ ˝£∫Œﬁ
 138          ∑µªÿ  ÷µ£∫Œﬁ
 139          *********************************************************/
 140          void RF24_TX_Mode(void)
 141          {
 142   1        CE = 0;
 143   1        //RF24_Write_Buf(WRITE_REG + TX_ADDR, TX_ADDRESS, TX_ADR_WIDTH);     // –¥»Î∑¢ÀÕµÿ÷∑
 144   1        //RF24_Write_Buf(WRITE_REG + RX_ADDR_P0, TX_ADDRESS, TX_ADR_WIDTH);  // Œ™¡À”¶¥Ω” ’…Ë±∏£¨Ω” ’Õ®µ¿0µÿ÷∑∫Õ
             -∑¢ÀÕµÿ÷∑œ‡Õ¨
 145   1      
 146   1        //RF24_Write_Reg(WRITE_REG + EN_AA, 0x01);                            //  πƒ‹Ω” ’Õ®µ¿0◊‘∂Ø”¶¥
 147   1        //RF24_Write_Reg(WRITE_REG + EN_RXADDR, 0x01);                        //  πƒ‹Ω” ’Õ®µ¿0
 148   1        //RF24_Write_Reg(WRITE_REG + SETUP_RETR, 0x0a);                       // ◊‘∂Ø÷ÿ∑¢—” ±µ»¥˝250us+86us£¨◊‘∂Ø÷ÿ∑¢10¥Œ
 149   1        //RF24_Write_Reg(WRITE_REG + RF_CH, 40);                              // —°‘Ò…‰∆µÕ®µ¿0x40
 150   1        //RF24_Write_Reg(WRITE_REG + RF_SETUP, 0x0f);                         //  ˝æ›¥´ ‰¬ 2Mbps£¨∑¢…‰π¶¬ 7dBm
 151   1        RF24_Write_Reg(WRITE_REG + CONFIG, 0x2e);                           // CRC πƒ‹£¨16ŒªCRC–£—È£¨…œµÁ
 152   1        //CE = 1;
 153   1      }
 154          
 155          
 156          /********************************************************
 157          ∫Ø ˝π¶ƒ‹£∫∂¡»°Ω” ’ ˝æ›                       
 158          »Îø⁄≤Œ ˝£∫rxbuf:Ω” ’ ˝æ›¥Ê∑≈ ◊µÿ÷∑
 159          ∑µªÿ  ÷µ£∫0:Ω” ’µΩ ˝æ›
 160                    1:√ª”–Ω” ’µΩ ˝æ›
 161          *********************************************************/
 162          unsigned char RF24_RxPacket(unsigned char *rxbuf)
 163          {
 164   1        unsigned char state;
 165   1        state = RF24_Read_Reg(STATUS);                         //∂¡»°◊¥Ã¨ºƒ¥Ê∆˜µƒ÷µ       
 166   1        RF24_Write_Reg(WRITE_REG+STATUS,state);               //«Â≥˝RX_DS÷–∂œ±Í÷æ
 167   1      
 168   1        if(state & RX_DR)                                          //Ω” ’µΩ ˝æ›
 169   1        {
 170   2          RF24_Read_Buf(RD_RX_PLOAD,rxbuf,TX_PLOAD_WIDTH);     //∂¡»° ˝æ›
 171   2          RF24_Write_Reg(FLUSH_RX,0xff);                        //«Â≥˝RX FIFOºƒ¥Ê∆˜
 172   2          return 0; 
 173   2        }    
 174   1        return 1;                                                   //√ª ’µΩ»Œ∫Œ ˝æ›
 175   1      }
C51 COMPILER V9.60.0.0   RF24                                                              02/12/2023 12:53:38 PAGE 4   

 176          
 177          
 178          /********************************************************
 179          ∫Ø ˝π¶ƒ‹£∫∑¢ÀÕ“ª∏ˆ ˝æ›∞¸                      
 180          »Îø⁄≤Œ ˝£∫txbuf:“™∑¢ÀÕµƒ ˝æ›
 181          ∑µªÿ  ÷µ£∫0x10:¥ÔµΩ◊Ó¥Û÷ÿ∑¢¥Œ ˝£¨∑¢ÀÕ ß∞‹ 
 182                    0x20:∑¢ÀÕ≥…π¶            
 183                    0xff:∑¢ÀÕ ß∞‹                  
 184          *********************************************************/
 185          unsigned char RF24_TxPacket(unsigned char *txbuf)
 186          {
 187   1        unsigned char state;
 188   1        CE=0;                                                     //CE¿≠µÕ£¨ πƒ‹RF24≈‰÷√
 189   1        RF24_Write_Buf(WR_TX_PLOAD, txbuf, TX_PLOAD_WIDTH);     //–¥ ˝æ›µΩTX FIFO,32∏ˆ◊÷Ω⁄
 190   1        CE=1;                                                     //CE÷√∏ﬂ£¨ πƒ‹∑¢ÀÕ     
 191   1        
 192   1        while(IRQ == 1);                                          //µ»¥˝∑¢ÀÕÕÍ≥…
 193   1        state = RF24_Read_Reg(STATUS);                          //∂¡»°◊¥Ã¨ºƒ¥Ê∆˜µƒ÷µ     
 194   1        RF24_Write_Reg(WRITE_REG+STATUS, state);                //«Â≥˝TX_DSªÚMAX_RT÷–∂œ±Í÷æ
 195   1        if(state&MAX_RT)                                          //¥ÔµΩ◊Ó¥Û÷ÿ∑¢¥Œ ˝
 196   1        {
 197   2          RF24_Write_Reg(FLUSH_TX,0xff);                        //«Â≥˝TX FIFOºƒ¥Ê∆˜ 
 198   2          return MAX_RT; 
 199   2        }
 200   1        if(state&TX_DS)                                           //∑¢ÀÕÕÍ≥…
 201   1        {
 202   2          return TX_DS;
 203   2        }
 204   1        return 0XFF;                                              //∑¢ÀÕ ß∞‹
 205   1      }
 206          
 207          void RF24_Set_Power(unsigned char p)
 208          {
 209   1        unsigned char temp;
 210   1        CE = 0;
 211   1        temp = RF24_Read_Reg(RF_SETUP);
 212   1        temp &= ~0x07;
 213   1        temp |= p;
 214   1        RF24_Write_Reg(WRITE_REG+RF_SETUP,temp);
 215   1        CE = 1;
 216   1      }
 217          
 218          void RF24_Set_Channel(unsigned char ch)
 219          {
 220   1        CE = 0;
 221   1        RF24_Write_Reg(WRITE_REG + RF_CH,ch);
 222   1        CE = 1;
 223   1      }
 224          
 225          void RF24_Set_Rate(unsigned char rate)
 226          {
 227   1        unsigned char temp;
 228   1        CE = 0;
 229   1        temp = RF24_Read_Reg(RF_SETUP);
 230   1        temp &= 0xd7; //0b1101 0111
 231   1        temp |= (rate&0x01)<<3;
 232   1        temp |= (rate&0x02)<<4;
 233   1        RF24_Write_Reg(WRITE_REG+RF_SETUP,temp);
 234   1        CE = 1;
 235   1      }
 236          
 237          void RF24_Set_P0_Size(unsigned char len)
C51 COMPILER V9.60.0.0   RF24                                                              02/12/2023 12:53:38 PAGE 5   

 238          {
 239   1        CE = 0;
 240   1        RF24_Write_Reg(WRITE_REG + RX_PW_P0,len);
 241   1        CE = 1;
 242   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    382    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      5      13
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
