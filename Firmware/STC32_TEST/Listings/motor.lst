C251 COMPILER V5.60.0,  motor                                                              21/07/23  15:19:09  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE motor
OBJECT MODULE PLACED IN .\Objects\motor.obj
COMPILER INVOKED BY: C:\Keil_c251\C251\BIN\C251.EXE Src\motor.c LARGE INTR2 ROM(HUGE) BROWSE INCDIR(.\Inc) DEBUG PRINT(.
                    -\Listings\motor.lst) TABS(2) OBJECT(.\Objects\motor.obj) 

stmt  level    source

    1          #include "motor.h"
    2          
    3          #if (USE_IO == 1)
               #define MOTOR_A_P P10
               #define MOTOR_A_N P11
               #define MOTOR_B_P P16
               #define MOTOR_B_N P17
               #endif
    9          
   10          #if (USE_PWM == 1)
   11          #define MOTOR_DEFAULT_CYCLE 127
   12          #define MOTOR_SHRESHOLD 15
   13          #endif
   14          
   15          void motor_init(void)
   16          {
   17   1      #if (USE_PWM == 1)
   18   1        pwm_init();
   19   1        pwma_setcycle(MOTOR_DEFAULT_CYCLE);
   20   1        motor_run(127);
   21   1        motor_turn(127);
   22   1      #endif
   23   1        
   24   1      #if (USE_IO == 1)
                 P1M0 &= ~0xc3; //0x11000011
                 P1M0 |= 0xc3;
                 P1M1 &= ~0xc3;
                 P1PU |= 0xc3;
               #endif
   30   1      }
   31          
   32          void motor_run(unsigned char vel)
   33          {
   34   1      #if (USE_PWM == 1)
   35   1        unsigned char tmp;
   36   1        //unsigned int duty;
   37   1        if(vel > 127)
   38   1        {
   39   2          tmp = vel - 127;
   40   2          pwm1p_enable();
   41   2        }
   42   1        else
   43   1        {
   44   2          tmp = 127 - vel;
   45   2          pwm1n_enable();
   46   2        }
   47   1        tmp = Limit(tmp, MOTOR_SHRESHOLD);
   48   1        //duty = Map(0, 127, 0, MOTOR_DEFAULT_CYCLE, tmp);
   49   1        pwm1_setduty(tmp);
   50   1      #endif
   51   1        
   52   1      #if (USE_IO == 1)
                 if(vel > 132)
                 {
                   MOTOR_A_N = 0;
                   delay_ms(1);
                   MOTOR_A_P = 1;
                 }
C251 COMPILER V5.60.0,  motor                                                              21/07/23  15:19:09  PAGE 2   

                 else if (vel < 122)
                 {
                   MOTOR_A_P = 0;
                   delay_ms(1);
                   MOTOR_A_N = 1;
                 }
                 else
                 {
                   MOTOR_A_P = 1;
                   MOTOR_A_N = 1;
                 }
               #endif
   71   1      }
   72          
   73          void motor_turn(unsigned char vel)
   74          {
   75   1      #if (USE_PWM == 1)
   76   1        unsigned char tmp;
   77   1        //unsigned int duty;
   78   1        if(vel > 127)
   79   1        {
   80   2          tmp = vel - 127;
   81   2          pwm4p_enable();
   82   2        }
   83   1        else
   84   1        {
   85   2          tmp = 127 - vel;
   86   2          pwm4n_enable();
   87   2        }
   88   1        tmp = Limit(tmp, MOTOR_SHRESHOLD);
   89   1        //duty = Map(0, 127, 0, MOTOR_DEFAULT_CYCLE, tmp);
   90   1        pwm4_setduty(tmp);
   91   1      #endif
   92   1        
   93   1      #if (USE_IO == 1)
                 if(vel > 132)
                 {
                   MOTOR_B_N = 0;
                   delay_ms(1);
                   MOTOR_B_P = 1;
                 }
                 else if (vel < 122)
                 {
                   MOTOR_B_P = 0;
                   delay_ms(1);
                   MOTOR_B_N = 1;
                 }
                 else
                 {
                   MOTOR_B_P = 1;
                   MOTOR_B_N = 1;
                 }
               #endif
  112   1      }


Module Information          Static   Overlayable
------------------------------------------------
  code size            =    ------     ------
  ecode size           =       126     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =    ------     ------
  bit size             =    ------     ------
C251 COMPILER V5.60.0,  motor                                                              21/07/23  15:19:09  PAGE 3   

  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =    ------     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
